head	1.2;
access;
symbols;
locks;
comment	@// @;


1.2
date	2021.12.28.22.11.26;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.12.28.21.54.01;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@// $Id: bigint.cpp,v 1.1 2021-12-28 13:54:01-08 - - $

#include <cstdlib>
#include <exception>
#include <stack>
#include <stdexcept>
using namespace std;

#include "bigint.h"

bigint::bigint (long that): uvalue (that), is_negative (that < 0) {
   DEBUGF ('~', this << " -> " << uvalue)
}

bigint::bigint (const ubigint& uvalue_, bool is_negative_):
                uvalue(uvalue_), is_negative(is_negative_) {
}

bigint::bigint (const string& that) {
   is_negative = that.size() > 0 and that[0] == '_';
   uvalue = ubigint (that.substr (is_negative ? 1 : 0));
}

bigint bigint::operator+ () const {
   return *this;
}

bigint bigint::operator- () const {
   return {uvalue, not is_negative};
}

bigint bigint::operator+ (const bigint& that) const {
   ubigint result {uvalue + that.uvalue};
   return result;
}

bigint bigint::operator- (const bigint& that) const {
   ubigint result {uvalue - that.uvalue};
   return result;
}


bigint bigint::operator* (const bigint& that) const {
   bigint result {uvalue * that.uvalue};
   return result;
}

bigint bigint::operator/ (const bigint& that) const {
   bigint result {uvalue / that.uvalue};
   return result;
}

bigint bigint::operator% (const bigint& that) const {
   bigint result {uvalue % that.uvalue};
   return result;
}

bool bigint::operator== (const bigint& that) const {
   return is_negative == that.is_negative and uvalue == that.uvalue;
}

bool bigint::operator< (const bigint& that) const {
   if (is_negative != that.is_negative) return is_negative;
   return is_negative ? uvalue > that.uvalue
                      : uvalue < that.uvalue;
}

void bigint::print() const {
   DEBUGF ('p', this << " -> " << *this);
   if (is_negative) cout << "-";
   uvalue.print();
}

ostream& operator<< (ostream& out, const bigint& that) {
   return out << "bigint(" << (that.is_negative ? "-" : "+")
              << "," << that.uvalue << ")";
}

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: bigint.cpp,v 1.4 2021-09-26 10:35:44-07 - - $
d66 6
@
